{"version":3,"sources":["redux/actions/index.js","components/AddForm/AddForm.js","components/ContactItem/ContactItem.js","components/FindForm/FindForm.js","components/Phonebook/Phonebook.js","App.js","redux/reducers/index.js","redux/store/store.js","index.js"],"names":["add","createAction","del","filter","AddForm","onSubmit","e","preventDefault","props","allUsers","find","el","name","nameValue","number","numberValue","error","setTimeout","newContact","id","shortid","generate","onReset","this","className","type","value","onChange","required","Component","mapDispatchToProps","connect","state","usersList","Contact","onDelete","onClick","FindForm","alert","filterChange","onFilter","target","filterValue","length","TransitionGroup","CSSTransition","in","timeout","classNames","placeholder","map","key","toLowerCase","includes","trim","mapDispathToProps","useState","addFormName","setAddFormName","setNumber","setError","title","setTitle","contacts","useSelector","dispatch","useDispatch","useEffect","localStorage","getItem","JSON","parse","forEach","updateStorage","useCallback","setItem","stringify","enter","exit","mountOnEnter","unmountOnExit","App","createReducer","action","payload","fil","reducers","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6615d75e.chunk.js","sourcesContent":["// export const add = (user) => ({\r\n//   type: \"ADD\",\r\n//   payload: user,\r\n// });\r\n\r\n// export const del = (id) => ({\r\n//   type: \"DELETE\",\r\n//   payload: id,\r\n// });\r\n\r\n// export const filter = (value) => ({\r\n//   type: \"FILTER\",\r\n//   payload: value,\r\n// });\r\nimport {createAction} from '@reduxjs/toolkit';\r\n\r\nexport const add = createAction(\"ADD\")\r\nexport const del = createAction(\"DELETE\")\r\nexport const filter = createAction(\"FILTER\")\r\n","import React,{Component} from \"react\";\r\nimport \"./AddForm.css\";\r\nimport PropTypes from \"prop-types\"; // ES6\r\nimport { connect } from \"react-redux\";\r\nimport { add } from \"../../redux/actions/index\";\r\nimport shortid from \"shortid\";\r\n\r\nclass AddForm extends Component {\r\n  \r\n    onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      this.props.allUsers.find(\r\n        (el) => el.name === this.props.nameValue || el.number === this.props.numberValue\r\n      )\r\n    ) {\r\n      this.props.error();\r\n      setTimeout(() => {\r\n        this.props.error();\r\n      }, 500);\r\n      return;\r\n    } else {\r\n      const newContact = {\r\n        name: this.props.nameValue,\r\n        number: this.props.numberValue,\r\n        id: shortid.generate(),\r\n      };\r\n      this.props.add(newContact);\r\n      this.props.onReset();\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"form\">\r\n        <span className=\"span\">Name</span>\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          value={this.props.nameValue}\r\n          name=\"addFormName\"\r\n          onChange={this.props.onChange}\r\n          required\r\n        />\r\n        <span className=\"span\">Number</span>\r\n        <input\r\n          type=\"number\"\r\n          className=\"input\"\r\n          value={this.props.numberValue}\r\n          name=\"number\"\r\n          onChange={this.props.onChange}\r\n          required\r\n        />\r\n        <button className=\"btn\" type=\"submit\">\r\n          a:d:d\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n};\r\n\r\nAddForm.propTypes = {\r\n  nameValue: PropTypes.string.isRequired,\r\n  numberValue: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onReset : PropTypes.func.isRequired,\r\n  error : PropTypes.func.isRequired,\r\n  allUsers :PropTypes.array.isRequired,\r\n  add : PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allUsers: state.usersList,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  add,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddForm);\r\n","import React from 'react'\r\nimport './ContactItem.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Contact=  ({el,onDelete}) => {\r\n\r\n    const deleteUser =  ()=> {\r\n         onDelete(el.id)\r\n    }\r\n    return (\r\n        <li id={el.id} className=\"item\">\r\n            <span className=\"label1\">{el.name}</span>\r\n            <span className=\"label2\">{el.number}</span>\r\n            <button onClick={deleteUser} className=\"button\">X</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nContact.propTypes = {\r\n    el : PropTypes.object.isRequired,\r\n    onDelete :PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Contact;","import ContactItem from \"../ContactItem/ContactItem\";\r\nimport \"./FindForm.css\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\"; // ES6\r\nimport { connect } from \"react-redux\";\r\nimport { del, filter } from \"../../redux/actions/index\";\r\n\r\nclass FindForm extends Component {\r\n  state = {\r\n    alert: false,\r\n  };\r\n\r\n  filterChange = (e) => {\r\n    this.props.onFilter(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { allUsers, del, filterValue } = this.props;\r\n    return (\r\n      <div>\r\n        {allUsers.length !== 0 ? (\r\n          <>\r\n            <TransitionGroup>\r\n              {allUsers.length > 0 && (\r\n                <CSSTransition\r\n                  in={this.state.alert}\r\n                  timeout={200}\r\n                  classNames=\"item\"\r\n                >\r\n                  <input\r\n                    className=\"inputSearch\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter name\"\r\n                    value={filterValue}\r\n                    onChange={this.filterChange}\r\n                    name=\"findSearch\"\r\n                  />\r\n                </CSSTransition>\r\n              )}\r\n            </TransitionGroup>\r\n\r\n            <TransitionGroup>\r\n              {filterValue.length === 0\r\n                ? this.props.allUsers.map((el) => (\r\n                    <CSSTransition key={el.id} timeout={200} classNames=\"item\">\r\n                      <ContactItem key={el.id} el={el} onDelete={del} />\r\n                    </CSSTransition>\r\n                  ))\r\n                : this.props.allUsers\r\n                    .filter((el) =>\r\n                      el.name\r\n                        .toLowerCase()\r\n                        .includes(this.props.filterValue.trim().toLowerCase())\r\n                    )\r\n                    .map((el) => (\r\n                      <CSSTransition\r\n                        key={el.id}\r\n                        timeout={200}\r\n                        classNames=\"item\"\r\n                      >\r\n                        <ContactItem key={el.id} el={el} onDelete={del} />\r\n                      </CSSTransition>\r\n                    ))}\r\n            </TransitionGroup>\r\n          </>\r\n        ) : (\r\n          <p className=\"first-contact animate__animated animate__bounce animate__heartBeat\">\r\n            Add your first Contact\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFindForm.propTypes = {\r\n  allUsers: PropTypes.array.isRequired,\r\n  filterValue: PropTypes.string.isRequired,\r\n  del: PropTypes.func.isRequired,\r\n  onFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allUsers: state.usersList,\r\n  filterValue: state.filter,\r\n});\r\nconst mapDispathToProps = {\r\n  del,\r\n  onFilter: filter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(FindForm);\r\n","import React, { useState, useEffect,useCallback } from \"react\";\r\nimport AddForm from \"../AddForm/AddForm\";\r\nimport FindForm from \"../FindForm/FindForm\";\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport \"./Phonebook.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport {add} from '../../redux/actions/index'\r\n\r\nexport default () => {\r\n  const [addFormName, setAddFormName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [title, setTitle] = useState(false);\r\n\r\n  const contacts = useSelector((state) => state.usersList);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTitle(!title);\r\n    if(localStorage.getItem('list')){\r\n      JSON.parse(localStorage.getItem('list')).forEach(el => dispatch(add(el)))\r\n    }\r\n  }, []);\r\n\r\n\r\n  const updateStorage = useCallback(() => {\r\n    localStorage.setItem('list',JSON.stringify(contacts))\r\n  }, [contacts]);\r\n\r\n  useEffect(() => {\r\n    updateStorage();\r\n  }, [contacts]);\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"addFormName\") {\r\n      setAddFormName(e.target.value);\r\n      return;\r\n    }\r\n    if (e.target.name === \"number\") {\r\n      setNumber(e.target.value);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setAddFormName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const busy = () => {\r\n    setError(!error);\r\n  };\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <CSSTransition\r\n        in={title}\r\n        classNames=\"title\"\r\n        timeout={{\r\n          enter: 500,\r\n          exit: 250,\r\n        }}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        <h2 className=\"title \">Phonebook</h2>\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in={error}\r\n        classNames=\"alert\"\r\n        timeout={{\r\n          enter: 250,\r\n          exit: 250,\r\n        }}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        <div className=\"alerts\">Сontact is already taken!</div>\r\n      </CSSTransition>\r\n\r\n      <AddForm\r\n        nameValue={addFormName}\r\n        numberValue={number}\r\n        onChange={handleChange}\r\n        onReset={reset}\r\n        error={busy}\r\n      />\r\n      <FindForm />\r\n    </section>\r\n  );\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport Phonebook from './components/Phonebook/Phonebook' \n\nfunction App() {\n  return (\n      <Phonebook/>\n  );\n}\n\nexport default App;\n","// import {combineReducers} from 'redux';\r\n\r\n// const usersList = (state = [],action) => {\r\n//     switch (action.type) {\r\n//         case 'ADD':\r\n//             return [...state,action.payload];\r\n            \r\n//         case 'DELETE':\r\n//             return state.filter( el => el.id !== action.payload)  ;\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// const filter = (state = '',action) =>{\r\n//     switch (action.type) {\r\n//         case 'FILTER':\r\n//             return action.payload;\r\n    \r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// const reducers = combineReducers({\r\n//     usersList,\r\n//     filter\r\n// })\r\n\r\n// export default reducers;\r\n\r\nimport {createReducer} from '@reduxjs/toolkit';\r\nimport {add,del,filter} from '../actions/index'\r\nimport {combineReducers} from 'redux';\r\n\r\nconst usersList = createReducer([],{\r\n    [add] : (state,action) =>  [...state,action.payload],\r\n    [del] : (state,action) =>  state.filter( el => el.id !== action.payload),\r\n})\r\nconst fil = createReducer('',{\r\n    [filter] : (state,action) =>  action.payload,\r\n})\r\n\r\nconst reducers = combineReducers({\r\n    usersList,\r\n    filter : fil,\r\n})\r\nexport default reducers;\r\n\r\n\r\n","// import reducer from '../reducers/index';\r\n// import {createStore} from 'redux';\r\n// import {devToolsEnhancer} from 'redux-devtools-extension';\r\n\r\n// const store = createStore(reducer,devToolsEnhancer());\r\n\r\n// export default store;\r\n\r\n\r\nimport {configureStore} from '@reduxjs/toolkit';\r\nimport reducer from '../reducers/index';\r\n\r\nconst store = configureStore({\r\n    reducer,\r\n    devTools : process.env.NODE_ENV !== 'production'\r\n})\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './redux/store/store'\n\nReactDOM.render(\n  <Provider store={store}>\n     <App />\n  </Provider>\n,  document.getElementById('root')\n);\n\n"],"sourceRoot":""}